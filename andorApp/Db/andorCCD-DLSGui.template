# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name

# This associates the template with an edm screen
# % gui, $(PORT), edmtab, andor.edl, P=$(P),R=$(R)

# This associates a BOY screen with the template
# % gui, $(PORT), boydetail, andorApp_opi/andor_detail.opi, P=$(P), R=$(R), DESC=Camera
# % gui, $(PORT), boyembed, andorApp_opi/andor_embed_box.opi, P=$(P), R=$(R), DESC=Camera
# % gui, $(PORT), boyembed, andorApp_opi/andor_embed.opi, P=$(P), R=$(R), DESC=Camera

# These define what PVs a motor detail screen should contain
# ADBase things
# Info
# % gui, $(PORT), readback, Port name,   $(P)$(R)PortName_RBV
# % gui, $(PORT), readback, Manufacturer,   $(P)$(R)Manufacturer_RBV
# % gui, $(PORT), readback, Model,   $(P)$(R)Model_RBV
# % gui, $(PORT), readback, Detector state,   $(P)$(R)DetectorState_RBV
# % gui, $(PORT), readback, Status message,   $(P)$(R)StatusMessage_RBV
# Image
# % gui, $(PORT), enum, Data type,   $(P)$(R)DataType
# % gui, $(PORT), readback, Data type,   $(P)$(R)DataType_RBV
# % gui, $(PORT), enum, Colour mode,   $(P)$(R)ColorMode
# % gui, $(PORT), readback, Colour mode,   $(P)$(R)ColorMode_RBV
# % gui, $(PORT), demand, Gain,   $(P)$(R)Gain
# % gui, $(PORT), readback, Gain,   $(P)$(R)Gain_RBV
# % gui, $(PORT), readback, Max size X,   $(P)$(R)MaxSizeX_RBV
# % gui, $(PORT), readback, Max size Y,   $(P)$(R)MaxSizeY_RBV
# % gui, $(PORT), demand, Binning X,   $(P)$(R)BinX
# % gui, $(PORT), readback, Binning X,   $(P)$(R)BinX_RBV
# % gui, $(PORT), demand, Binning Y,   $(P)$(R)BinY
# % gui, $(PORT), readback, Binning Y,   $(P)$(R)BinY_RBV
# % gui, $(PORT), demand, Region start X,   $(P)$(R)MinX
# % gui, $(PORT), readback, Region start X,   $(P)$(R)MinX_RBV
# % gui, $(PORT), demand, Region start Y,   $(P)$(R)MinY
# % gui, $(PORT), readback, Region start Y,   $(P)$(R)MinY_RBV
# % gui, $(PORT), demand, Region size X,   $(P)$(R)SizeX
# % gui, $(PORT), readback, Region size X,   $(P)$(R)SizeX_RBV
# % gui, $(PORT), demand, Region size Y,   $(P)$(R)SizeY
# % gui, $(PORT), readback, Region size Y,   $(P)$(R)SizeY_RBV
# % gui, $(PORT), readback, Array Size X,   $(P)$(R)ArraySizeX_RBV
# % gui, $(PORT), readback, Array Size Y,   $(P)$(R)ArraySizeY_RBV
# % gui, $(PORT), readback, Array Size,   $(P)$(R)ArraySize_RBV
# Acquisition
# % gui, $(PORT), demand, Acquire time,   $(P)$(R)AcquireTime
# % gui, $(PORT), readback, Acquire time,   $(P)$(R)AcquireTime_RBV
# % gui, $(PORT), demand, Acquire period,   $(P)$(R)AcquirePeriod
# % gui, $(PORT), readback, Acquire period,   $(P)$(R)AcquirePeriod_RBV
# % gui, $(PORT), readback, Time remaining,   $(P)$(R)TimeRemaining_RBV
# % gui, $(PORT), enum, Frame type,   $(P)$(R)FrameType
# % gui, $(PORT), readback, Frame type,   $(P)$(R)FrameType_RBV
# % gui, $(PORT), enum, Image mode,   $(P)$(R)ImageMode
# % gui, $(PORT), readback, Image mode,   $(P)$(R)ImageMode_RBV
# % gui, $(PORT), demand, Num images,   $(P)$(R)NumImages
# % gui, $(PORT), readback, Num images,   $(P)$(R)NumImages_RBV
# % gui, $(PORT), readback, Image counter,   $(P)$(R)NumImagesCounter_RBV
# % gui, $(PORT), enum, Acquire,   $(P)$(R)Acquire
# % gui, $(PORT), readback, Acquire,   $(P)$(R)Acquire_RBV
# % gui, $(PORT), demand, Array counter,   $(P)$(R)ArrayCounter
# % gui, $(PORT), readback, Array counter,   $(P)$(R)ArrayCounter_RBV
# % gui, $(PORT), readback, Array rate,   $(P)$(R)ArrayRate_RBV
# % gui, $(PORT), enum, Array callbacks,   $(P)$(R)ArrayCallbacks
# % gui, $(PORT), readback, Array callbacks,   $(P)$(R)ArrayCallbacks_RBV
# % gui, $(PORT), demand, Attributes file,   $(P)$(R)NDAttributesFile
# Temperature
# % gui, $(PORT), enum, Shutter mode,   $(P)$(R)ShutterMode
# % gui, $(PORT), readback, Shutter mode,   $(P)$(R)ShutterMode_RBV
# % gui, $(PORT), enum, Shutter control,   $(P)$(R)ShutterControl
# % gui, $(PORT), readback, Shutter control,   $(P)$(R)ShutterControl_RBV
# % gui, $(PORT), readback, Shutter status,   $(P)$(R)ShutterStatus_RBV
# % gui, $(PORT), demand, Shutter open delay,   $(P)$(R)ShutterOpenDelay
# % gui, $(PORT), readback, Shutter open delay,   $(P)$(R)ShutterOpenDelay_RBV
# % gui, $(PORT), demand, Shutter close delay,   $(P)$(R)ShutterCloseDelay
# % gui, $(PORT), readback, Shutter close delay,   $(P)$(R)ShutterCloseDelay_RBV
# % gui, $(PORT), demand, Temperature setpoint,   $(P)$(R)Temperature
# % gui, $(PORT), readback, Temperature setpoint,   $(P)$(R)Temperature_RBV
# % gui, $(PORT), readback, Current temperature,   $(P)$(R)TemperatureActual
# Memory
# % gui, $(PORT), readback, Max memory,   $(P)$(R)PoolMaxMem
# % gui, $(PORT), readback, Max buffers,   $(P)$(R)PoolMaxBuffers
# % gui, $(PORT), readback, Used memory,   $(P)$(R)PoolUsedMem
# % gui, $(PORT), readback, Allocated buffers,   $(P)$(R)PoolAllocBuffers
# % gui, $(PORT), readback, Free buffers,   $(P)$(R)PoolFreeBuffers
# % gui, $(PORT), readback, Used buffers,   $(P)$(R)PoolUsedBuffers
# Andor Camera things
# % gui, $(PORT), demand, Accumulate period,   $(P)$(R)AndorAccumulatePeriod
# % gui, $(PORT), readback, Accumulate period,   $(P)$(R)AndorAccumulatePeriod_RBV
# % gui, $(PORT), enum, Andor shutter mode,   $(P)$(R)AndorShutterMode
# % gui, $(PORT), enum, Andor Ext shutter trigger,   $(P)$(R)AndorShutterExTTL
# % gui, $(PORT), enum, Preamp gain,   $(P)$(R)AndorPreAmpGain
# % gui, $(PORT), readback, Preamp gain,   $(P)$(R)AndorPreAmpGain_RBV
# % gui, $(PORT), enum, ADC speed,   $(P)$(R)AndorADCSpeed
# % gui, $(PORT), readback, ADC speed,   $(P)$(R)AndorADCSpeed_RBV
# % gui, $(PORT), enum, Vertical shift speed,   $(P)$(R)AndorVSSpeed
# % gui, $(PORT), readback, Vertical shift speed,   $(P)$(R)AndorVSSpeed_RBV
# % gui, $(PORT), enum, Vertical shift amplitude,   $(P)$(R)AndorVSAmplitude
# % gui, $(PORT), readback, Vertical shift amplitude,   $(P)$(R)AndorVSAmplitude_RBV
# % gui, $(PORT), demand, EM CCD gain,   $(P)$(R)AndorEMGain
# % gui, $(PORT), readback, EM CCD gain,   $(P)$(R)AndorEMGain_RBV
# % gui, $(PORT), demand, Fan control,   $(P)$(R)AndorFanMode
# % gui, $(PORT), readback, Fan control,   $(P)$(R)AndorFanStatus_RBV
# % gui, $(PORT), enum, Cooler control,   $(P)$(R)AndorCooler
# % gui, $(PORT), demand, Cooler temperature,   $(P)$(R)Temperature
# % gui, $(PORT), readback, Cooler temperature,   $(P)$(R)Temperature_RBV
# % gui, $(PORT), readback, Current temperature,   $(P)$(R)TemperatureActual
# % gui, $(PORT), readback, Cooler status, $(P)$(R)AndorTempStatus_RBV
# % gui, $(PORT), readback, Driver status, $(P)$(R)AndorMessage_RBV
